{"ast":null,"code":"const cohortName = \"2204-FTB-MT-WEB-PT\";\nconst APIURL = `https://strangers-things.herokuapp.com/api/${cohortName}`;\nexport const fetchAllPost = async token => {\n  const response = await fetch(`${APIURL}/posts`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    }\n  });\n  const result = await response.json();\n  return result.data.posts;\n};\nexport const fetchCreateForm = async (token, title, description, price, location) => {\n  const response = await fetch(`${APIURL}/posts`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    },\n    body: JSON.stringify({\n      post: {\n        title: title,\n        description: description,\n        price: price,\n        location: location\n      }\n    })\n  });\n  const result = await response.json();\n  console.log(result.data.post);\n  return result.data.post;\n};\nexport const fetchRegister = async (userName, password) => {\n  const response = await fetch(`${APIURL}/users/register`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      user: {\n        username: userName,\n        password: password\n      }\n    })\n  });\n  const result = await response.json();\n  return result.data.token;\n};\nexport const fetchLogin = async (userName, password) => {\n  const response = await fetch(`${APIURL}/users/login`, {\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      user: {\n        username: userName,\n        password: password\n      }\n    })\n  });\n  const result = await response.json();\n  console.log(result.data.token);\n  return result.data.token;\n};\nexport const fetchDelete = async (token, postID, selectedPost, posts, setPosts) => {\n  const response = await fetch(`${APIURL}/posts/${postID}`, {\n    method: \"DELETE\",\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    }\n  });\n  const result = await response.json();\n  console.log(result);\n\n  if (result.success) {\n    window.confirm('Are you sure you want to DELETE this post?');\n    const newPost = posts.filter(post => post._id !== selectedPost);\n    console.log(newPost);\n    setPosts(newPost);\n  } else {\n    alert(\"UNAUTHORIZED TO DELETE\");\n  }\n};\nexport const fetchMessage = async (postID, token, comment) => {\n  const response = await fetch(`${APIURL}/posts/${postID}/messages`, {\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    },\n    body: JSON.stringify({\n      message: {\n        content: comment\n      }\n    })\n  });\n  const result = await response.json();\n  console.log(result);\n  return result.data.message.content;\n};","map":{"version":3,"names":["cohortName","APIURL","fetchAllPost","token","response","fetch","method","headers","result","json","data","posts","fetchCreateForm","title","description","price","location","body","JSON","stringify","post","console","log","fetchRegister","userName","password","user","username","fetchLogin","fetchDelete","postID","selectedPost","setPosts","success","window","confirm","newPost","filter","_id","alert","fetchMessage","comment","message","content"],"sources":["/Users/adrianimperial/Desktop/Course_work/Stranger things/src/utility/api.js"],"sourcesContent":["const cohortName = \"2204-FTB-MT-WEB-PT\";\nconst APIURL = `https://strangers-things.herokuapp.com/api/${cohortName}`;\n\nexport const fetchAllPost = async (token) => {\n  const response = await fetch(`${APIURL}/posts`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    }\n  })\n  const result = await response.json();\n    return (result.data.posts)\n  };\n\n\nexport const fetchCreateForm = async (token, title, description, price, location) => {\n  const response = await fetch(`${APIURL}/posts`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    },\n    body: JSON.stringify({\n      post: {\n        title: title,\n        description: description,\n        price: price,\n        location: location\n      }\n    })\n  })\n  const result = await response.json();\n  console.log(result.data.post)\n  return result.data.post \n\n}\n\nexport const fetchRegister = async (userName, password) => {\n  const response = await fetch(`${APIURL}/users/register`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      user: {\n        username: userName,\n        password: password\n      }\n    })\n    \n  })\n  const result = await response.json();\n  return (result.data.token)\n}\n\n\nexport const fetchLogin = async (userName, password) => {\n  const response = await fetch(`${APIURL}/users/login`, {\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      user: {\n        username: userName,\n        password: password \n      }\n    })\n  })\n\n  const result = await response.json()\n  console.log(result.data.token)\n  return result.data.token\n}\n\nexport const fetchDelete = async (token, postID, selectedPost, posts, setPosts) => {\n  const response = await fetch(`${APIURL}/posts/${postID}`, {\n    method: \"DELETE\",\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    }\n  })\n  const result = await response.json()\n  console.log(result)\n  if (result.success){\n    window.confirm('Are you sure you want to DELETE this post?')\n    const newPost = posts.filter(post => post._id !== selectedPost)\n    console.log(newPost)\n    setPosts(newPost)\n  } else{\n    alert(\"UNAUTHORIZED TO DELETE\")\n  }\n  \n}\n\nexport const fetchMessage = async (postID, token, comment) => {\n  const response = await fetch(`${APIURL}/posts/${postID}/messages`, {\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    },\n    body: JSON.stringify({\n      message: {\n        content: comment\n      }\n    })\n  })\n\n  const result = await response.json();\n  console.log(result)\n  return result.data.message.content\n  \n}"],"mappings":"AAAA,MAAMA,UAAU,GAAG,oBAAnB;AACA,MAAMC,MAAM,GAAI,8CAA6CD,UAAW,EAAxE;AAEA,OAAO,MAAME,YAAY,GAAG,MAAOC,KAAP,IAAiB;EAC3C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEJ,MAAO,QAAX,EAAoB;IAC9CK,MAAM,EAAE,KADsC;IAE9CC,OAAO,EAAE;MACP,gBAAgB,kBADT;MAEP,iBAAkB,UAASJ,KAAM;IAF1B;EAFqC,CAApB,CAA5B;EAOA,MAAMK,MAAM,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAArB;EACE,OAAQD,MAAM,CAACE,IAAP,CAAYC,KAApB;AACD,CAVI;AAaP,OAAO,MAAMC,eAAe,GAAG,OAAOT,KAAP,EAAcU,KAAd,EAAqBC,WAArB,EAAkCC,KAAlC,EAAyCC,QAAzC,KAAsD;EACnF,MAAMZ,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEJ,MAAO,QAAX,EAAoB;IAC9CK,MAAM,EAAE,MADsC;IAE9CC,OAAO,EAAE;MACP,gBAAgB,kBADT;MAEP,iBAAkB,UAASJ,KAAM;IAF1B,CAFqC;IAM9Cc,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;MACnBC,IAAI,EAAE;QACJP,KAAK,EAAEA,KADH;QAEJC,WAAW,EAAEA,WAFT;QAGJC,KAAK,EAAEA,KAHH;QAIJC,QAAQ,EAAEA;MAJN;IADa,CAAf;EANwC,CAApB,CAA5B;EAeA,MAAMR,MAAM,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAArB;EACAY,OAAO,CAACC,GAAR,CAAYd,MAAM,CAACE,IAAP,CAAYU,IAAxB;EACA,OAAOZ,MAAM,CAACE,IAAP,CAAYU,IAAnB;AAED,CApBM;AAsBP,OAAO,MAAMG,aAAa,GAAG,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;EACzD,MAAMrB,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEJ,MAAO,iBAAX,EAA6B;IACvDK,MAAM,EAAE,MAD+C;IAEvDC,OAAO,EAAE;MACP,gBAAgB;IADT,CAF8C;IAKvDU,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;MACnBO,IAAI,EAAE;QACJC,QAAQ,EAAEH,QADN;QAEJC,QAAQ,EAAEA;MAFN;IADa,CAAf;EALiD,CAA7B,CAA5B;EAaA,MAAMjB,MAAM,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAArB;EACA,OAAQD,MAAM,CAACE,IAAP,CAAYP,KAApB;AACD,CAhBM;AAmBP,OAAO,MAAMyB,UAAU,GAAG,OAAOJ,QAAP,EAAiBC,QAAjB,KAA8B;EACtD,MAAMrB,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEJ,MAAO,cAAX,EAA0B;IACpDK,MAAM,EAAE,MAD4C;IAEpDC,OAAO,EAAE;MACP,gBAAgB;IADT,CAF2C;IAKpDU,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;MACnBO,IAAI,EAAE;QACJC,QAAQ,EAAEH,QADN;QAEJC,QAAQ,EAAEA;MAFN;IADa,CAAf;EAL8C,CAA1B,CAA5B;EAaA,MAAMjB,MAAM,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAArB;EACAY,OAAO,CAACC,GAAR,CAAYd,MAAM,CAACE,IAAP,CAAYP,KAAxB;EACA,OAAOK,MAAM,CAACE,IAAP,CAAYP,KAAnB;AACD,CAjBM;AAmBP,OAAO,MAAM0B,WAAW,GAAG,OAAO1B,KAAP,EAAc2B,MAAd,EAAsBC,YAAtB,EAAoCpB,KAApC,EAA2CqB,QAA3C,KAAwD;EACjF,MAAM5B,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEJ,MAAO,UAAS6B,MAAO,EAA3B,EAA8B;IACxDxB,MAAM,EAAE,QADgD;IAExDC,OAAO,EAAE;MACP,gBAAgB,kBADT;MAEP,iBAAkB,UAASJ,KAAM;IAF1B;EAF+C,CAA9B,CAA5B;EAOA,MAAMK,MAAM,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAArB;EACAY,OAAO,CAACC,GAAR,CAAYd,MAAZ;;EACA,IAAIA,MAAM,CAACyB,OAAX,EAAmB;IACjBC,MAAM,CAACC,OAAP,CAAe,4CAAf;IACA,MAAMC,OAAO,GAAGzB,KAAK,CAAC0B,MAAN,CAAajB,IAAI,IAAIA,IAAI,CAACkB,GAAL,KAAaP,YAAlC,CAAhB;IACAV,OAAO,CAACC,GAAR,CAAYc,OAAZ;IACAJ,QAAQ,CAACI,OAAD,CAAR;EACD,CALD,MAKM;IACJG,KAAK,CAAC,wBAAD,CAAL;EACD;AAEF,CAnBM;AAqBP,OAAO,MAAMC,YAAY,GAAG,OAAOV,MAAP,EAAe3B,KAAf,EAAsBsC,OAAtB,KAAkC;EAC5D,MAAMrC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEJ,MAAO,UAAS6B,MAAO,WAA3B,EAAuC;IACjExB,MAAM,EAAE,MADyD;IAEjEC,OAAO,EAAE;MACP,gBAAgB,kBADT;MAEP,iBAAkB,UAASJ,KAAM;IAF1B,CAFwD;IAMjEc,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;MACnBuB,OAAO,EAAE;QACPC,OAAO,EAAEF;MADF;IADU,CAAf;EAN2D,CAAvC,CAA5B;EAaA,MAAMjC,MAAM,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAArB;EACAY,OAAO,CAACC,GAAR,CAAYd,MAAZ;EACA,OAAOA,MAAM,CAACE,IAAP,CAAYgC,OAAZ,CAAoBC,OAA3B;AAED,CAlBM"},"metadata":{},"sourceType":"module"}