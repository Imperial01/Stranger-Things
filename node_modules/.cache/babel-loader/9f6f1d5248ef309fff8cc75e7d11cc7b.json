{"ast":null,"code":"var _jsxFileName = \"/Users/adrianimperial/Desktop/Course_work/Stranger things/src/components/Posts.js\",\n    _s = $RefreshSig$();\n\nimport { React, useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { fetchAllPost } from \"../utility/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cohortName = \"2204-FTB-MT-WEB-PT\";\nconst APIURL = `https://strangers-things.herokuapp.com/api/${cohortName}/`; //i need a form that will let me create a post (i MUST be AUTHORIZED/Registered)\n// have a button on my created post that will let me delete a post IF i am registered\n// on a different user post, I need a message BUTTON\n\nconst Posts = props => {\n  _s();\n\n  const {\n    posts,\n    setPosts\n  } = props;\n  const [search, setSearch] = useState('');\n  const {\n    title,\n    description,\n    price,\n    location\n  } = props;\n\n  const post = async () => {\n    setPosts(await fetchAllPost());\n  };\n\n  useEffect(() => {\n    post();\n  }, []);\n\n  const handleSearch = event => {\n    setSearch(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"postNav\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"search\",\n        placeholder: \"Search Post\",\n        value: search,\n        onChange: handleSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/createform\",\n        style: {\n          fontSize: \"30px\"\n        },\n        children: \"Create a Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }, this), posts.filter(post => {\n      return `${post.title} ${post.description}`.toLowerCase().includes(search.toLowerCase());\n    }).map(post => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"post-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Price:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this), \" \", post.price]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Seller:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this), \" \", post.author.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Location:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this), \" \", post.location]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Posts, \"QlMZ0ipwzaGXI9hX7QmQuwPkUzk=\");\n\n_c = Posts;\nexport default Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","useEffect","useState","Link","fetchAllPost","cohortName","APIURL","Posts","props","posts","setPosts","search","setSearch","title","description","price","location","post","handleSearch","event","target","value","handleSubmit","preventDefault","fontSize","filter","toLowerCase","includes","map","author","username"],"sources":["/Users/adrianimperial/Desktop/Course_work/Stranger things/src/components/Posts.js"],"sourcesContent":["import { React, useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { fetchAllPost } from \"../utility/api\";\n\nconst cohortName = \"2204-FTB-MT-WEB-PT\";\nconst APIURL = `https://strangers-things.herokuapp.com/api/${cohortName}/`;\n\n//i need a form that will let me create a post (i MUST be AUTHORIZED/Registered)\n// have a button on my created post that will let me delete a post IF i am registered\n\n// on a different user post, I need a message BUTTON\n\nconst Posts = (props) => {\n  const {posts, setPosts} = props\n  const [search, setSearch] = useState('');\n  const {\n    title,\n    description,\n    price,\n    location\n  } = props\n\n  const post = async () => {\n    setPosts(await fetchAllPost())\n  }\n\n  useEffect(() => {\n    post();\n  }, []);\n\n\n  const handleSearch= (event) => {\n    setSearch(event.target.value)\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n  }\n\n  return (\n    <div>\n          <form id=\"postNav\" onSubmit={handleSubmit}>\n            <input type=\"text\" name=\"search\" placeholder=\"Search Post\" value={search} onChange={handleSearch}></input>\n            <Link to=\"/createform\" style={{fontSize: \"30px\"}}>Create a Post</Link>\n        </form>\n        \n      {\n      posts.filter(post => {\n        return `${post.title} ${post.description}`\n            .toLowerCase()\n            .includes(search.toLowerCase())\n      }).map((post) => {\n        return (\n          <div id=\"post-card\">\n            <h1>{post.title}</h1>\n            <p>{post.description}</p>\n            <div>\n              <b>Price:</b> {post.price}\n            </div>\n            <div>\n              <b>Seller:</b> {post.author.username}\n            </div>\n            <div>\n              <b>Location:</b> {post.location}\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Posts;\n"],"mappings":";;;AAAA,SAASA,KAAT,EAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,YAAT,QAA6B,gBAA7B;;AAEA,MAAMC,UAAU,GAAG,oBAAnB;AACA,MAAMC,MAAM,GAAI,8CAA6CD,UAAW,GAAxE,C,CAEA;AACA;AAEA;;AAEA,MAAME,KAAK,GAAIC,KAAD,IAAW;EAAA;;EACvB,MAAM;IAACC,KAAD;IAAQC;EAAR,IAAoBF,KAA1B;EACA,MAAM,CAACG,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC;EACA,MAAM;IACJW,KADI;IAEJC,WAFI;IAGJC,KAHI;IAIJC;EAJI,IAKFR,KALJ;;EAOA,MAAMS,IAAI,GAAG,YAAY;IACvBP,QAAQ,CAAC,MAAMN,YAAY,EAAnB,CAAR;EACD,CAFD;;EAIAH,SAAS,CAAC,MAAM;IACdgB,IAAI;EACL,CAFQ,EAEN,EAFM,CAAT;;EAKA,MAAMC,YAAY,GAAGC,KAAD,IAAW;IAC7BP,SAAS,CAACO,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAT;EACD,CAFD;;EAIA,MAAMC,YAAY,GAAIH,KAAD,IAAW;IAC9BA,KAAK,CAACI,cAAN;EACD,CAFD;;EAIA,oBACE;IAAA,wBACM;MAAM,EAAE,EAAC,SAAT;MAAmB,QAAQ,EAAED,YAA7B;MAAA,wBACE;QAAO,IAAI,EAAC,MAAZ;QAAmB,IAAI,EAAC,QAAxB;QAAiC,WAAW,EAAC,aAA7C;QAA2D,KAAK,EAAEX,MAAlE;QAA0E,QAAQ,EAAEO;MAApF;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,IAAD;QAAM,EAAE,EAAC,aAAT;QAAuB,KAAK,EAAE;UAACM,QAAQ,EAAE;QAAX,CAA9B;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QADN,EAOEf,KAAK,CAACgB,MAAN,CAAaR,IAAI,IAAI;MACnB,OAAQ,GAAEA,IAAI,CAACJ,KAAM,IAAGI,IAAI,CAACH,WAAY,EAAlC,CACFY,WADE,GAEFC,QAFE,CAEOhB,MAAM,CAACe,WAAP,EAFP,CAAP;IAGD,CAJD,EAIGE,GAJH,CAIQX,IAAD,IAAU;MACf,oBACE;QAAK,EAAE,EAAC,WAAR;QAAA,wBACE;UAAA,UAAKA,IAAI,CAACJ;QAAV;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAA,UAAII,IAAI,CAACH;QAAT;UAAA;UAAA;UAAA;QAAA,QAFF,eAGE;UAAA,wBACE;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADF,OACiBG,IAAI,CAACF,KADtB;QAAA;UAAA;UAAA;UAAA;QAAA,QAHF,eAME;UAAA,wBACE;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADF,OACkBE,IAAI,CAACY,MAAL,CAAYC,QAD9B;QAAA;UAAA;UAAA;UAAA;QAAA,QANF,eASE;UAAA,wBACE;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADF,OACoBb,IAAI,CAACD,QADzB;QAAA;UAAA;UAAA;UAAA;QAAA,QATF;MAAA;QAAA;QAAA;QAAA;MAAA,QADF;IAeD,CApBD,CAPF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA+BD,CA1DD;;GAAMT,K;;KAAAA,K;AA4DN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}