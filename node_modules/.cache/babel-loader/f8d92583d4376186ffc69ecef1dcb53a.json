{"ast":null,"code":"const cohortName = \"2204-FTB-MT-WEB-PT\";\nconst APIURL = `https://strangers-things.herokuapp.com/api/${cohortName}`;\nexport const fetchAllPost = async () => {\n  const response = await fetch(`${APIURL}/posts`);\n  const result = await response.json();\n  return result.data.posts;\n};\nexport const fetchCreateForm = async (token, title, description, price, location) => {\n  const response = await fetch(`${APIURL}/posts`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    },\n    body: JSON.stringify({\n      post: {\n        title: title,\n        description: description,\n        price: price,\n        location: location\n      }\n    })\n  });\n  const result = await response.json();\n  console.log(result.data.post);\n  return result.data.post;\n};\nexport const fetchRegister = async (userName, password) => {\n  const response = await fetch(`${APIURL}/users/register`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      user: {\n        username: userName,\n        password: password\n      }\n    })\n  });\n  const result = await response.json();\n  return result.data.token;\n};\nexport const fetchLogin = async (userName, password) => {\n  const response = await fetch(`${APIURL}/users/login`, {\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      user: {\n        username: userName,\n        password: password\n      }\n    })\n  });\n  const result = await response.json();\n  console.log(result.data.token);\n  return result.data.token;\n};\nexport const fetchDelete = async (token, postID, selectedPost, posts, setPosts) => {\n  const response = await fetch(`${APIURL}/posts/${postID}`, {\n    method: \"DELETE\",\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    }\n  });\n  const result = await response.json();\n  console.log(result);\n\n  if (result.success) {\n    window.confirm('Are you sure you want to DELETE this post?');\n    const newPost = posts.filter(post => post._id !== selectedPost);\n    console.log(newPost);\n    setPosts(newPost);\n  } else {\n    alert(\"UNAUTHORIZED TO DELETE\");\n  }\n};\nexport const fetchMessage = async (postID, token, comment) => {\n  const response = await fetch(`${APIURL}/posts/${postID}/messages`, {\n    method: \"POST\",\n    headers: {\n      'Content=Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    },\n    body: JSON.stringify({\n      message: {\n        content: comment\n      }\n    })\n  });\n  const result = await response.json();\n  console.log(result);\n  return result;\n};","map":{"version":3,"names":["cohortName","APIURL","fetchAllPost","response","fetch","result","json","data","posts","fetchCreateForm","token","title","description","price","location","method","headers","body","JSON","stringify","post","console","log","fetchRegister","userName","password","user","username","fetchLogin","fetchDelete","postID","selectedPost","setPosts","success","window","confirm","newPost","filter","_id","alert","fetchMessage","comment","message","content"],"sources":["/Users/adrianimperial/Desktop/Course_work/Stranger things/src/utility/api.js"],"sourcesContent":["const cohortName = \"2204-FTB-MT-WEB-PT\";\nconst APIURL = `https://strangers-things.herokuapp.com/api/${cohortName}`;\n\nexport const fetchAllPost = async () => {\n  const response = await fetch(`${APIURL}/posts`);\n  const result = await response.json();\n    return (result.data.posts)\n  };\n\n\nexport const fetchCreateForm = async (token, title, description, price, location) => {\n  const response = await fetch(`${APIURL}/posts`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    },\n    body: JSON.stringify({\n      post: {\n        title: title,\n        description: description,\n        price: price,\n        location: location\n      }\n    })\n  })\n  const result = await response.json();\n  console.log(result.data.post)\n  return result.data.post \n\n}\n\nexport const fetchRegister = async (userName, password) => {\n  const response = await fetch(`${APIURL}/users/register`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      user: {\n        username: userName,\n        password: password\n      }\n    })\n    \n  })\n  const result = await response.json();\n  return (result.data.token)\n}\n\n\nexport const fetchLogin = async (userName, password) => {\n  const response = await fetch(`${APIURL}/users/login`, {\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      user: {\n        username: userName,\n        password: password \n      }\n    })\n  })\n\n  const result = await response.json()\n  console.log(result.data.token)\n  return result.data.token\n}\n\nexport const fetchDelete = async (token, postID, selectedPost, posts, setPosts) => {\n  const response = await fetch(`${APIURL}/posts/${postID}`, {\n    method: \"DELETE\",\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    }\n  })\n  const result = await response.json()\n  console.log(result)\n  if (result.success){\n    window.confirm('Are you sure you want to DELETE this post?')\n    const newPost = posts.filter(post => post._id !== selectedPost)\n    console.log(newPost)\n    setPosts(newPost)\n  } else{\n    alert(\"UNAUTHORIZED TO DELETE\")\n  }\n  \n}\n\nexport const fetchMessage = async (postID, token, comment) => {\n  const response = await fetch(`${APIURL}/posts/${postID}/messages`, {\n    method: \"POST\",\n    headers: {\n      'Content=Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    },\n    body: JSON.stringify({\n      message: {\n        content: comment\n      }\n    })\n  })\n\n  const result = await response.json();\n  console.log(result)\n  return result\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}