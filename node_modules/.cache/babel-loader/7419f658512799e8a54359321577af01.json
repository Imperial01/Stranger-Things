{"ast":null,"code":"const cohortName = \"2204-FTB-MT-WEB-PT\";\nconst APIURL = `https://strangers-things.herokuapp.com/api/${cohortName}`;\nexport const fetchAllPost = async () => {\n  const response = await fetch(`${APIURL}/posts`);\n  const result = await response.json();\n  return result.data.posts;\n};\nexport const fetchCreateForm = async (token, title, description, price, location) => {\n  const response = await fetch(`${APIURL}/posts`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    },\n    body: JSON.stringify({\n      post: {\n        title: title,\n        description: description,\n        price: price,\n        location: location\n      }\n    })\n  });\n  const result = await response.json();\n  console.log(result);\n};\nexport const fetchRegister = async (userName, password) => {\n  const response = await fetch(`${APIURL}/users/register`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      user: {\n        username: userName,\n        password: password\n      }\n    })\n  });\n  const result = await response.json();\n  console.log(result.data.token);\n  return result.data.token;\n}; // .then(response => response.json())\n//   .then(result => {\n//     console.log(result.data.token)\n//     return (result.data.token)\n//   })\n//   .catch(console.error)\n\nexport const fetchLogin = async (userName, password) => {\n  const response = await fetch(`${APIURL}/users/login`, {\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      user: {\n        username: userName,\n        password: password\n      }\n    })\n  });\n  const result = await response.json();\n  console.log(result);\n  return result.data.token;\n}; //   .then (response => response.json())\n//     .then(result => {\n//       console.log(result)\n//     })\n//     .catch(console.error) \n// }","map":{"version":3,"names":["cohortName","APIURL","fetchAllPost","response","fetch","result","json","data","posts","fetchCreateForm","token","title","description","price","location","method","headers","body","JSON","stringify","post","console","log","fetchRegister","userName","password","user","username","fetchLogin"],"sources":["/Users/adrianimperial/Desktop/Course_work/Stranger things/src/utility/api.js"],"sourcesContent":["const cohortName = \"2204-FTB-MT-WEB-PT\";\nconst APIURL = `https://strangers-things.herokuapp.com/api/${cohortName}`;\n\nexport const fetchAllPost = async () => {\n  const response = await fetch(`${APIURL}/posts`);\n  const result = await response.json();\n    return (result.data.posts)\n  };\n\n\nexport const fetchCreateForm = async (token, title, description, price, location) => {\n  const response = await fetch(`${APIURL}/posts`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    },\n    body: JSON.stringify({\n      post: {\n        title: title,\n        description: description,\n        price: price,\n        location: location\n      }\n    })\n  })\n  const result = await response.json();\n  console.log(result)\n\n}\n\nexport const fetchRegister = async (userName, password) => {\n  const response = await fetch(`${APIURL}/users/register`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      user: {\n        username: userName,\n        password: password\n      }\n    })\n    \n  })\n  const result = await response.json();\n  console.log(result.data.token)\n  return (result.data.token)\n}\n\n  // .then(response => response.json())\n  //   .then(result => {\n  //     console.log(result.data.token)\n  //     return (result.data.token)\n  //   })\n  //   .catch(console.error)\n\n\n\nexport const fetchLogin = async (userName, password) => {\n  const response = await fetch(`${APIURL}/users/login`, {\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      user: {\n        username: userName,\n        password: password \n      }\n    })\n  })\n\n  const result = await response.json()\n  console.log(result)\n  return result.data.token\n  \n}\n  \n//   .then (response => response.json())\n//     .then(result => {\n//       console.log(result)\n//     })\n//     .catch(console.error) \n// }"],"mappings":"AAAA,MAAMA,UAAU,GAAG,oBAAnB;AACA,MAAMC,MAAM,GAAI,8CAA6CD,UAAW,EAAxE;AAEA,OAAO,MAAME,YAAY,GAAG,YAAY;EACtC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEH,MAAO,QAAX,CAA5B;EACA,MAAMI,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAArB;EACE,OAAQD,MAAM,CAACE,IAAP,CAAYC,KAApB;AACD,CAJI;AAOP,OAAO,MAAMC,eAAe,GAAG,OAAOC,KAAP,EAAcC,KAAd,EAAqBC,WAArB,EAAkCC,KAAlC,EAAyCC,QAAzC,KAAsD;EACnF,MAAMX,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEH,MAAO,QAAX,EAAoB;IAC9Cc,MAAM,EAAE,MADsC;IAE9CC,OAAO,EAAE;MACP,gBAAgB,kBADT;MAEP,iBAAkB,UAASN,KAAM;IAF1B,CAFqC;IAM9CO,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;MACnBC,IAAI,EAAE;QACJT,KAAK,EAAEA,KADH;QAEJC,WAAW,EAAEA,WAFT;QAGJC,KAAK,EAAEA,KAHH;QAIJC,QAAQ,EAAEA;MAJN;IADa,CAAf;EANwC,CAApB,CAA5B;EAeA,MAAMT,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAArB;EACAe,OAAO,CAACC,GAAR,CAAYjB,MAAZ;AAED,CAnBM;AAqBP,OAAO,MAAMkB,aAAa,GAAG,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;EACzD,MAAMtB,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEH,MAAO,iBAAX,EAA6B;IACvDc,MAAM,EAAE,MAD+C;IAEvDC,OAAO,EAAE;MACP,gBAAgB;IADT,CAF8C;IAKvDC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;MACnBO,IAAI,EAAE;QACJC,QAAQ,EAAEH,QADN;QAEJC,QAAQ,EAAEA;MAFN;IADa,CAAf;EALiD,CAA7B,CAA5B;EAaA,MAAMpB,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAArB;EACAe,OAAO,CAACC,GAAR,CAAYjB,MAAM,CAACE,IAAP,CAAYG,KAAxB;EACA,OAAQL,MAAM,CAACE,IAAP,CAAYG,KAApB;AACD,CAjBM,C,CAmBL;AACA;AACA;AACA;AACA;AACA;;AAIF,OAAO,MAAMkB,UAAU,GAAG,OAAOJ,QAAP,EAAiBC,QAAjB,KAA8B;EACtD,MAAMtB,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEH,MAAO,cAAX,EAA0B;IACpDc,MAAM,EAAE,MAD4C;IAEpDC,OAAO,EAAE;MACP,gBAAgB;IADT,CAF2C;IAKpDC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;MACnBO,IAAI,EAAE;QACJC,QAAQ,EAAEH,QADN;QAEJC,QAAQ,EAAEA;MAFN;IADa,CAAf;EAL8C,CAA1B,CAA5B;EAaA,MAAMpB,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAArB;EACAe,OAAO,CAACC,GAAR,CAAYjB,MAAZ;EACA,OAAOA,MAAM,CAACE,IAAP,CAAYG,KAAnB;AAED,CAlBM,C,CAoBP;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}