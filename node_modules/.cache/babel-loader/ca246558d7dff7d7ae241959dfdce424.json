{"ast":null,"code":"const cohortName = \"2204-FTB-MT-WEB-PT\";\nconst APIURL = `https://strangers-things.herokuapp.com/api/${cohortName}`;\nexport const fetchAllPost = async () => {\n  const response = await fetch(`${APIURL}/posts`);\n  const result = await response.json();\n  return result.data.posts;\n};\nexport const fetchCreateForm = async token => {\n  const response = await fetch(`${APIURL}/posts`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer token'\n    }\n  });\n};\nexport const fetchRegister = async (userName, password) => {\n  const response = await fetch(`${APIURL}users/register`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      user: {\n        username: userName,\n        password: password\n      }\n    })\n  });\n  const result = await response.json();\n  console.log(result.data.token);\n  return result.data.token;\n}; // .then(response => response.json())\n//   .then(result => {\n//     console.log(result.data.token)\n//     return (result.data.token)\n//   })\n//   .catch(console.error)\n\nexport const fetchLogin = async (userName, password) => {\n  const response = await fetch(`${APIURL}users/login`, {\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      user: {\n        username: userName,\n        password: password\n      }\n    })\n  });\n  const result = await response.json();\n  console.log(result);\n  return result;\n}; //   .then (response => response.json())\n//     .then(result => {\n//       console.log(result)\n//     })\n//     .catch(console.error) \n// }","map":{"version":3,"names":["cohortName","APIURL","fetchAllPost","response","fetch","result","json","data","posts","fetchCreateForm","token","method","headers","fetchRegister","userName","password","body","JSON","stringify","user","username","console","log","fetchLogin"],"sources":["/Users/adrianimperial/Desktop/Course_work/Stranger things/src/utility/api.js"],"sourcesContent":["const cohortName = \"2204-FTB-MT-WEB-PT\";\nconst APIURL = `https://strangers-things.herokuapp.com/api/${cohortName}`;\n\nexport const fetchAllPost = async () => {\n  const response = await fetch(`${APIURL}/posts`);\n  const result = await response.json();\n    return (result.data.posts)\n  };\n\n\nexport const fetchCreateForm = async (token) => {\n  const response = await fetch(`${APIURL}/posts`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer token'\n    },\n\n  })\n}\n\nexport const fetchRegister = async (userName, password) => {\n  const response = await fetch(`${APIURL}users/register`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      user: {\n        username: userName,\n        password: password\n      }\n    })\n    \n  })\n  const result = await response.json();\n  console.log(result.data.token)\n  return (result.data.token)\n}\n\n  // .then(response => response.json())\n  //   .then(result => {\n  //     console.log(result.data.token)\n  //     return (result.data.token)\n  //   })\n  //   .catch(console.error)\n\n\n\nexport const fetchLogin = async (userName, password) => {\n  const response = await fetch(`${APIURL}users/login`, {\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      user: {\n        username: userName,\n        password: password \n      }\n    })\n  })\n\n  const result = await response.json()\n  console.log(result)\n  return result\n  \n}\n  \n//   .then (response => response.json())\n//     .then(result => {\n//       console.log(result)\n//     })\n//     .catch(console.error) \n// }"],"mappings":"AAAA,MAAMA,UAAU,GAAG,oBAAnB;AACA,MAAMC,MAAM,GAAI,8CAA6CD,UAAW,EAAxE;AAEA,OAAO,MAAME,YAAY,GAAG,YAAY;EACtC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEH,MAAO,QAAX,CAA5B;EACA,MAAMI,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAArB;EACE,OAAQD,MAAM,CAACE,IAAP,CAAYC,KAApB;AACD,CAJI;AAOP,OAAO,MAAMC,eAAe,GAAG,MAAOC,KAAP,IAAiB;EAC9C,MAAMP,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEH,MAAO,QAAX,EAAoB;IAC9CU,MAAM,EAAE,MADsC;IAE9CC,OAAO,EAAE;MACP,gBAAgB,kBADT;MAEP,iBAAiB;IAFV;EAFqC,CAApB,CAA5B;AAQD,CATM;AAWP,OAAO,MAAMC,aAAa,GAAG,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;EACzD,MAAMZ,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEH,MAAO,gBAAX,EAA4B;IACtDU,MAAM,EAAE,MAD8C;IAEtDC,OAAO,EAAE;MACP,gBAAgB;IADT,CAF6C;IAKtDI,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;MACnBC,IAAI,EAAE;QACJC,QAAQ,EAAEN,QADN;QAEJC,QAAQ,EAAEA;MAFN;IADa,CAAf;EALgD,CAA5B,CAA5B;EAaA,MAAMV,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAArB;EACAe,OAAO,CAACC,GAAR,CAAYjB,MAAM,CAACE,IAAP,CAAYG,KAAxB;EACA,OAAQL,MAAM,CAACE,IAAP,CAAYG,KAApB;AACD,CAjBM,C,CAmBL;AACA;AACA;AACA;AACA;AACA;;AAIF,OAAO,MAAMa,UAAU,GAAG,OAAOT,QAAP,EAAiBC,QAAjB,KAA8B;EACtD,MAAMZ,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEH,MAAO,aAAX,EAAyB;IACnDU,MAAM,EAAE,MAD2C;IAEnDC,OAAO,EAAE;MACP,gBAAgB;IADT,CAF0C;IAKnDI,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;MACnBC,IAAI,EAAE;QACJC,QAAQ,EAAEN,QADN;QAEJC,QAAQ,EAAEA;MAFN;IADa,CAAf;EAL6C,CAAzB,CAA5B;EAaA,MAAMV,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAArB;EACAe,OAAO,CAACC,GAAR,CAAYjB,MAAZ;EACA,OAAOA,MAAP;AAED,CAlBM,C,CAoBP;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}