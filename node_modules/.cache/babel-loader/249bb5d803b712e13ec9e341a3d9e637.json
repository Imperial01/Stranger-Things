{"ast":null,"code":"const cohortName = \"2204-FTB-MT-WEB-PT\";\nconst APIURL = `https://strangers-things.herokuapp.com/api/${cohortName}/`;\nexport const fetchAllPost = async () => {\n  const response = await fetch(`${APIURL}/posts`);\n  const result = await response.json();\n  return result.data.posts;\n};\nexport const fetchRegister = async (userName, password) => {\n  const response = await fetch(`${APIURL}users/register`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      user: {\n        username: userName,\n        password: password\n      }\n    })\n  });\n  const result = await response.json(); // .then(response => response.json())\n  //   .then(result => {\n  //     console.log(result.data.token)\n  //     return (result.data.token)\n  //   })\n  //   .catch(console.error)\n};\nexport const fetchLogin = async (userName, password) => {\n  fetch(`${APIURL}users/login`, {\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      user: {\n        username: userName,\n        password: password\n      }\n    })\n  }).then(response => response.json()).then(result => {\n    console.log(result);\n  }).catch(console.error);\n};","map":{"version":3,"names":["cohortName","APIURL","fetchAllPost","response","fetch","result","json","data","posts","fetchRegister","userName","password","method","headers","body","JSON","stringify","user","username","fetchLogin","then","console","log","catch","error"],"sources":["/Users/adrianimperial/Desktop/Course_work/Stranger things/src/utility/api.js"],"sourcesContent":["const cohortName = \"2204-FTB-MT-WEB-PT\";\nconst APIURL = `https://strangers-things.herokuapp.com/api/${cohortName}/`;\n\nexport const fetchAllPost = async () => {\n    const response = await fetch(`${APIURL}/posts`);\n    const result = await response.json();\n    return (result.data.posts)\n  };\n\n\nexport const fetchRegister = async (userName, password) => {\n  const response = await fetch(`${APIURL}users/register`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      user: {\n        username: userName,\n        password: password\n      }\n    })\n    \n  })\n  const result = await response.json();\n  \n  // .then(response => response.json())\n  //   .then(result => {\n  //     console.log(result.data.token)\n  //     return (result.data.token)\n  //   })\n  //   .catch(console.error)\n}\n\n\nexport const fetchLogin = async (userName, password) => {\n  fetch(`${APIURL}users/login`, {\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      user: {\n        username: userName,\n        password: password \n      }\n    })\n  }).then (response => response.json())\n    .then(result => {\n      console.log(result)\n    })\n    .catch(console.error) \n}"],"mappings":"AAAA,MAAMA,UAAU,GAAG,oBAAnB;AACA,MAAMC,MAAM,GAAI,8CAA6CD,UAAW,GAAxE;AAEA,OAAO,MAAME,YAAY,GAAG,YAAY;EACpC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEH,MAAO,QAAX,CAA5B;EACA,MAAMI,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAArB;EACA,OAAQD,MAAM,CAACE,IAAP,CAAYC,KAApB;AACD,CAJI;AAOP,OAAO,MAAMC,aAAa,GAAG,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;EACzD,MAAMR,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEH,MAAO,gBAAX,EAA4B;IACtDW,MAAM,EAAE,MAD8C;IAEtDC,OAAO,EAAE;MACP,gBAAgB;IADT,CAF6C;IAKtDC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;MACnBC,IAAI,EAAE;QACJC,QAAQ,EAAER,QADN;QAEJC,QAAQ,EAAEA;MAFN;IADa,CAAf;EALgD,CAA5B,CAA5B;EAaA,MAAMN,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAArB,CAdyD,CAgBzD;EACA;EACA;EACA;EACA;EACA;AACD,CAtBM;AAyBP,OAAO,MAAMa,UAAU,GAAG,OAAOT,QAAP,EAAiBC,QAAjB,KAA8B;EACtDP,KAAK,CAAE,GAAEH,MAAO,aAAX,EAAyB;IAC5BW,MAAM,EAAE,MADoB;IAE5BC,OAAO,EAAE;MACP,gBAAgB;IADT,CAFmB;IAK5BC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;MACnBC,IAAI,EAAE;QACJC,QAAQ,EAAER,QADN;QAEJC,QAAQ,EAAEA;MAFN;IADa,CAAf;EALsB,CAAzB,CAAL,CAWGS,IAXH,CAWSjB,QAAQ,IAAIA,QAAQ,CAACG,IAAT,EAXrB,EAYGc,IAZH,CAYQf,MAAM,IAAI;IACdgB,OAAO,CAACC,GAAR,CAAYjB,MAAZ;EACD,CAdH,EAeGkB,KAfH,CAeSF,OAAO,CAACG,KAfjB;AAgBD,CAjBM"},"metadata":{},"sourceType":"module"}