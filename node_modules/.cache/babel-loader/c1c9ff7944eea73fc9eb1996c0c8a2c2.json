{"ast":null,"code":"var _jsxFileName = \"/Users/adrianimperial/Desktop/Course_work/Stranger things/src/components/Posts.js\",\n    _s = $RefreshSig$();\n\nimport { React, useEffect, useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { fetchAllPost } from \"../utility/api\";\nimport { fetchDelete } from \"../utility/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Posts = props => {\n  _s();\n\n  const {\n    posts,\n    setPosts,\n    postID,\n    token\n  } = props;\n  const [search, setSearch] = useState(''); // const {\n  //   // title,\n  //   // description,\n  //   // price,\n  //   // location,\n  //   //token\n  // } = props\n\n  const post = async () => {\n    setPosts(await fetchAllPost());\n  };\n\n  useEffect(() => {\n    post();\n  }, []);\n\n  const handleSearch = event => {\n    setSearch(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n  };\n\n  const history = useHistory();\n\n  const handleClick = () => {\n    token ? history.push('/createform') : alert(\"Please Login\");\n  };\n\n  const handleDelete = async () => {\n    const deletePost = await fetchDelete(postID, token);\n    console.log(postID);\n    let id = posts.map(post => {\n      post._id;\n    });\n    return deletePost;\n  }; //error:\n  //message: \"that route does not exist\"\n  //name: \"UndefinedRoute\"\n\n\n  const handleFeaturedPost = async () => {// grab that post and display on screen\n    // change the URL path to ${APIURL}/post/postID\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"postNav\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"search\",\n        placeholder: \"Search Post\",\n        value: search,\n        onChange: handleSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          fontSize: \"15px\"\n        },\n        onClick: handleClick,\n        children: \"Create a Post +\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }, this), posts.filter(post => {\n      return `${post.title} ${post.description}` //After creating a post, I can't see my Posts because of a TypeError \"Cannot read properties of undefined (reading \"title\") Post.js line 49:1\n      .toLowerCase().includes(search.toLowerCase());\n    }).map(post => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"post-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: post.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: post.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Price:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this), \" \", post.price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Seller:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this), \" \", post.author.username]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Location:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this), \" \", post.location]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleFeaturedPost,\n            children: \"VIEW\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleDelete,\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Posts, \"65DqHx/4CNQV/7VlQ4Tp5LtTYf8=\", false, function () {\n  return [useHistory];\n});\n\n_c = Posts;\nexport default Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","useEffect","useState","Link","useHistory","fetchAllPost","fetchDelete","Posts","props","posts","setPosts","postID","token","search","setSearch","post","handleSearch","event","target","value","handleSubmit","preventDefault","history","handleClick","push","alert","handleDelete","deletePost","console","log","id","map","_id","handleFeaturedPost","fontSize","filter","title","description","toLowerCase","includes","price","author","username","location"],"sources":["/Users/adrianimperial/Desktop/Course_work/Stranger things/src/components/Posts.js"],"sourcesContent":["import { React, useEffect, useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { fetchAllPost } from \"../utility/api\";\nimport { fetchDelete } from \"../utility/api\";\n\nconst Posts = (props) => {\n  const {posts, setPosts, postID, token} = props\n  const [search, setSearch] = useState('');\n  // const {\n  //   // title,\n  //   // description,\n  //   // price,\n  //   // location,\n  //   //token\n  // } = props\n\n  const post = async () => {\n    setPosts(await fetchAllPost())\n  }\n\n  useEffect(() => {\n    post();\n  }, []);\n\n\n  const handleSearch= (event) => {\n    setSearch(event.target.value)\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n  }\n\n  const history = useHistory();\n  const handleClick = () => {\n    token ? history.push('/createform') :\n    alert(\"Please Login\")\n  }\n\n  const handleDelete = async () => {\n    const deletePost = await fetchDelete(postID,token);\n    console.log(postID)\n    let id = posts.map(post => {\n      post._id\n    })\n    return deletePost\n  }\n  //error:\n    //message: \"that route does not exist\"\n    //name: \"UndefinedRoute\"\n\n  const handleFeaturedPost = async () => {\n    // grab that post and display on screen\n    \n    // change the URL path to ${APIURL}/post/postID\n  }\n\n  return (\n    <div>\n          <form id=\"postNav\" onSubmit={handleSubmit}>\n            <input type=\"text\" name=\"search\" placeholder=\"Search Post\" value={search} onChange={handleSearch}></input>\n            <button style={{fontSize: \"15px\"}} onClick = {handleClick}>Create a Post +</button>\n        </form>\n        \n      {\n      posts.filter(post => {\n        \n        return `${post.title} ${post.description}`\n        //After creating a post, I can't see my Posts because of a TypeError \"Cannot read properties of undefined (reading \"title\") Post.js line 49:1\n            .toLowerCase()\n            .includes(search.toLowerCase())\n      }).map((post) => {\n        return (\n        <>\n          <div id=\"post-card\">\n            <h1>{post.title}</h1>\n            <p>{post.description}</p>\n            <div>\n              <b>Price:</b> {post.price}\n            </div>\n            <div>\n              <b>Seller:</b> {post.author.username}\n            </div>\n            <div>\n              <b>Location:</b> {post.location}\n            </div>\n            <br></br>\n            <button onClick={handleFeaturedPost}>VIEW</button>\n            <button onClick={handleDelete}>Delete</button>\n          </div>\n        </>  \n        );\n      })}\n    </div>\n  );\n};\n\nexport default Posts;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}