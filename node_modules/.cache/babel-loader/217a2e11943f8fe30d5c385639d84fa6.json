{"ast":null,"code":"var _jsxFileName = \"/Users/adrianimperial/Desktop/Course_work/Stranger things/src/components/Posts.js\",\n    _s = $RefreshSig$();\n\nimport { React, useEffect, useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { fetchAllPost } from \"../utility/api\";\nimport { fetchDelete } from \"../utility/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Posts = props => {\n  _s();\n\n  const {\n    posts,\n    setPosts,\n    postID\n  } = props;\n  const [search, setSearch] = useState('');\n  const {\n    // title,\n    // description,\n    // price,\n    // location,\n    token\n  } = props;\n\n  const post = async () => {\n    setPosts(await fetchAllPost());\n  };\n\n  useEffect(() => {\n    post();\n  }, []);\n\n  const handleSearch = event => {\n    setSearch(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n  };\n\n  const history = useHistory();\n\n  const handleClick = () => {\n    token ? history.push('/createform') : alert(\"Please Login\");\n  };\n\n  const handleDelete = async () => {\n    let deletePost = await fetchDelete();\n    return deletePost;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"postNav\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"search\",\n        placeholder: \"Search Post\",\n        value: search,\n        onChange: handleSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          fontSize: \"15px\"\n        },\n        onClick: handleClick,\n        children: \"Create a Post +\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }, this), posts.filter(post => {\n      return `${post.title} ${post.description}` //After creating a post, I can't see my Posts because of a TypeError \"Cannot read properties of undefined (reading \"title\") Post.js line 49:1\n      .toLowerCase().includes(search.toLowerCase());\n    }).map(post => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"post-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: post.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: post.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Price:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this), \" \", post.price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Seller:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this), \" \", post.author.username]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Location:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this), \" \", post.location]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleDelete,\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Posts, \"65DqHx/4CNQV/7VlQ4Tp5LtTYf8=\", false, function () {\n  return [useHistory];\n});\n\n_c = Posts;\nexport default Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","useEffect","useState","Link","useHistory","fetchAllPost","fetchDelete","Posts","props","posts","setPosts","postID","search","setSearch","token","post","handleSearch","event","target","value","handleSubmit","preventDefault","history","handleClick","push","alert","handleDelete","deletePost","fontSize","filter","title","description","toLowerCase","includes","map","price","author","username","location"],"sources":["/Users/adrianimperial/Desktop/Course_work/Stranger things/src/components/Posts.js"],"sourcesContent":["import { React, useEffect, useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { fetchAllPost } from \"../utility/api\";\nimport { fetchDelete } from \"../utility/api\";\n\nconst Posts = (props) => {\n  const {posts, setPosts, postID} = props\n  const [search, setSearch] = useState('');\n  const {\n    // title,\n    // description,\n    // price,\n    // location,\n    token\n  } = props\n\n  const post = async () => {\n    setPosts(await fetchAllPost())\n  }\n\n  useEffect(() => {\n    post();\n  }, []);\n\n\n  const handleSearch= (event) => {\n    setSearch(event.target.value)\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n  }\n\n  const history = useHistory();\n  const handleClick = () => {\n    token ? history.push('/createform') :\n    alert(\"Please Login\")\n  }\n\n  const handleDelete = async () => {\n    let deletePost = await fetchDelete();\n    return deletePost\n  }\n\n  return (\n    <div>\n          <form id=\"postNav\" onSubmit={handleSubmit}>\n            <input type=\"text\" name=\"search\" placeholder=\"Search Post\" value={search} onChange={handleSearch}></input>\n            <button style={{fontSize: \"15px\"}} onClick = {handleClick}>Create a Post +</button>\n        </form>\n        \n      {\n      posts.filter(post => {\n        \n        return `${post.title} ${post.description}`\n        //After creating a post, I can't see my Posts because of a TypeError \"Cannot read properties of undefined (reading \"title\") Post.js line 49:1\n            .toLowerCase()\n            .includes(search.toLowerCase())\n      }).map((post) => {\n        return (\n        <>\n          <div id=\"post-card\">\n            <h1>{post.title}</h1>\n            <p>{post.description}</p>\n            <div>\n              <b>Price:</b> {post.price}\n            </div>\n            <div>\n              <b>Seller:</b> {post.author.username}\n            </div>\n            <div>\n              <b>Location:</b> {post.location}\n            </div>\n            <br></br>\n            <button onClick={handleDelete}>Delete</button>\n          </div>\n        </>  \n        );\n      })}\n    </div>\n  );\n};\n\nexport default Posts;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}